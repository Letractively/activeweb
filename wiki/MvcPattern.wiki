#summary description of !ActiveWeb MVC implementation

<wiki:toc max_depth="2" />

=Introduction=
An !ActiveWeb project is an implementation of a famous MVC pattern but adopted for the web. In this respect, the !ActiveWeb is not any different from a number of other web frameworks, such as Struts 1, Grails, Ruby on Rails, Spring MVC and others. 

=Model=

A model in the !ActiveWeb application is represented by custom objects that contain data. These can be models as in [http://code.google.com/p/activejdbc/ ActiveJDBC] models, or any other custom objects which represent information specific to the business domain of the application.


=View=
View in the !ActiveWeb project is represented by [http://freemarker.sourceforge.net/ FreeMarker] templates. While !ActiveWeb can be used with other templating frameworks, FreeMarker is currently the only implementation. For reasons why FreeMarker was selected,  please refer to FAQ.
!ActiveWeb as a framework allows for better separation of controller and view because it is based on [http://freemarker.sourceforge.net/ FreeMarker], thus disallowing creeping scriptlets into views.


=Controller=
At the heart of the !ActiveWeb project there is an MVC pattern - Model-View-Controller.
A controller in !ActiveWeb is a Java class which extends class `activeweb.AppController and provides one or more public void methods. An instance of such a class is used to process web requests 
