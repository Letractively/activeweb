#summary all about views for ActiveWeb developer

<wiki:toc max_depth="2" />

= Introduction =

Views in !ActiveWeb are also called templates. They are located in the following directory:
{{{
 ..src/main/webapp/WEB-INF/views
}}}

=No JSPs=

!ActiveWeb does not use JSPs. The main reason for not using JSPs is inability to test generated HTML with JSPs in a unit test. While the first implementation of !ActiveWeb used JSPs as the rendering engine, as soon as we started implementing the [Testing] framework, we quickly realized that this is simply impossible with JSPs. Generating HTML from a JUnit test is complex and impractical and would also be time consuming. Besides, the number of problems with different versions of JSP and JSTL specifications would be a nightmare to maintain. Thus we made a hard choice early on in 2010 to not use JSPs all together. In the long run this has proven to be a good decision, since it is possible to write very thorough tests with !ActiveWeb.

=!ActiveWeb uses !FreeMarker=
!ActiveWeb uses !FreeMarker as a templating engine. Please see [FAQ#Why_FreeMarker_? Why FreeMarker?] for more information. 

!ActiveWeb has a pluggable architecture that allows to integrate any other engine, such as Velocity, as long as they can implement [http://code.google.com/p/activeweb/source/browse/trunk/activeweb/src/main/java/activeweb/TemplateManager.java TempalteManager] interface. 

=!FreeMarker configuration=


TODO: complete this




=Templates=
!ActiveWeb templates are in fact !FreeMarker templates. However, there are a number of !ActiveWeb conventions for template naming and placement. Templates are located in sub-directories of this top view directory:
{{{ 
src/main/webapp/WEB-INF/views
}}}

The sub-directories are usually named after controllers. Controller name would loose suffix "Controller", and the remainder would be transformed from !CamelCase to underscore, for example, `HomeController` templates are located in sub-directory 
{{{
src/main/webapp/WEB-INF/views/home
}}}
and `OuterSpaceController` templates are located in:
{{{
src/main/webapp/WEB-INF/views/outer_space
}}}

Controller package is not considered in search of templates. Usually templates belong to a controller, but there can also be template that are shared. In that case, you can create any arbitrary directory under template top directory and place your shared templates there:
{{{
src/main/webapp/WEB-INF/views/shared
}}}



=Partials=

TODO: complete


To be completed:

  * default layouts
  * custom layouts
  * layouts
  * ActiveWeb objects in context
  * FreeMarker?
  * Tags
  * link_to
  * FlashTag
  * confirmation
  * form
  * content_for, yield
  * Custom tag development 